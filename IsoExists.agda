-- Proof that forall functor F, (โ[ A ] A ร F A) โ F ๐

open import Type
open import Function.NP
open import Relation.Binary.Logical hiding (โฆโโง) renaming (โฆโโโง to โฆโโง; โฆโคโง to โฆ๐โง)
open import Relation.Binary.PropositionalEquality using (_โก_; subst)
open import Data.Unit renaming (โค to ๐)
open import Data.Product.NP

module IsoExists
         {F  : โ โ โ}
         (Fแตฃ : (โฆโโง โฆโโง โฆโโง) F F)
         {mapF  : โ {A B} โ (A โ B) โ F A โ F B}
         (mapFแตฃ : (โโจ Aแตฃ โถ โฆโโง โฉโฆโโง โโจ Bแตฃ โถ โฆโโง โฉโฆโโง (Aแตฃ โฆโโง Bแตฃ) โฆโโง Fแตฃ Aแตฃ โฆโโง Fแตฃ Bแตฃ) mapF mapF)
         (mapF-id : โ {A} โ mapF {A} id โก id)
         where

  f : (โ[ A ] A ร F A) โ F ๐
  f (_ , _ , x) = mapF _ x
  
  fโปยน : F ๐ โ (โ[ A ] A ร F A)
  fโปยน t = _ , _ , t

  module _
         {Xโ Xโ : โ}
         {Xแตฃ    : โฆโโง Xโ Xโ}
         {tโ    : F Xโ}
         {tโ    : F Xโ} where
    subst-mapF-id : Fแตฃ Xแตฃ tโ (mapF id tโ) โ Fแตฃ Xแตฃ tโ tโ
    subst-mapF-id = subst (ฮป C โ Fแตฃ Xแตฃ tโ (C tโ)) mapF-id

  STโTS-id : โ {t : F ๐} (tแตฃ : Fแตฃ โฆ๐โง t t) โ Fแตฃ โฆ๐โง (f (fโปยน t)) t
  STโTS-id = subst-mapF-id โ mapFแตฃ _ _ _

  โโF : (eโ eโ : โ[ A ] A ร F A) โ โ
  โโF (_ , _ , tโ) (_ , _ , tโ) = Fแตฃ (ฮป _ _ โ ๐) tโ tโ

  TSโST-id : โ (t  : โ[ A ] A ร F A)
               (tแตฃ : (โฆโโง[ Aแตฃ ] Aแตฃ โฆรโง Fแตฃ Aแตฃ) t t)
             โ โโF (fโปยน (f t)) t
  TSโST-id t (_ , _ , tแตฃ) = subst-mapF-id (mapFแตฃ _ _ _ tแตฃ)
